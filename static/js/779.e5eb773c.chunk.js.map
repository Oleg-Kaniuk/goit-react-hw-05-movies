{"version":3,"file":"static/js/779.e5eb773c.chunk.js","mappings":"wWAGMA,EAAM,mCACNC,EAAM,+BAECC,EAAc,CACzBC,SAAU,YACVC,QAAS,IACTC,MAAO,QACPC,SAAU,QAGL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gFACGC,EADH,UACYR,GADZ,OACkBO,EADlB,oBACsCR,GADtC,SAEoBU,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCL,EAAUM,GAA3C,gFACGL,EADH,UACYR,GADZ,OACkBO,EADlB,oBACsCR,EADtC,kBACmDc,GADnD,SAEoBJ,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAiCP,EAAUQ,GAA3C,gFACGP,EADH,UACYR,GADZ,OACkBO,EADlB,YAC8BQ,EAD9B,oBACiDhB,GADjD,SAEoBU,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAA8BT,EAAUQ,GAAxC,gFACGP,EADH,UACYR,GADZ,OACkBO,EADlB,YAC8BQ,EAD9B,4BACyDhB,GADzD,SAEoBU,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeM,EAAtB,iDAAO,OAAP,oBAAO,WAAiCV,EAAUQ,GAA3C,gFACGP,EADH,UACYR,GADZ,OACkBO,EADlB,YAC8BQ,EAD9B,4BACyDhB,GADzD,SAEoBU,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAASO,IACZC,EAAAA,OAAAA,QAAe,6EAA8ElB,EAChG,C,8EC3CYmB,E,OAAUC,GAAAA,IAAH,yE,SCCPC,EAAS,kBAClB,SAACF,EAAD,WACI,SAAC,KAAD,CACIG,SAAS,EACTC,OAAO,MACPpB,MAAM,MACNqB,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,aAT3C,C,0ICDTC,EAAaR,EAAAA,GAAAA,GAAH,yFAMVS,EAAaT,EAAAA,GAAAA,GAAH,uI,SCiCvB,EAjCgB,WACZ,IAAQN,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA8BiB,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACDtB,IAILE,EAAAA,EAAAA,IAZS,SAYmBF,GACvBuB,MAAK,SAAA3B,GACFyB,EAAWzB,EAAK4B,QACnB,IACAC,MAAMtB,EAAAA,IACNuB,SAAQ,kBAAMP,GAAW,EAAjB,GAChB,GAAE,CAACnB,KAEG,iCACH,wBAAI,aACHkB,IAAW,SAACX,EAAA,EAAD,IACQ,IAAnBa,EAAQO,QACL,SAACb,EAAD,UACKM,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,UAAChB,EAAD,YACI,0BAAG,uBAAG,YAAW,IAAEe,MACnB,uBAAIC,MAFSF,EADR,OAMjB,uBAAG,sDAEd,C","sources":["api/api.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\nconst KEY = \"992758a4802a699e8df27d4d6efc34fb\";\nconst URL = \"https://api.themoviedb.org/3\";\n\nexport const styleNotify = {\n  position: 'top-right',\n  timeout: 2000,\n  width: '300px',\n  fontSize: '20px'\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport function fetchError() {\n    Notify.failure('Oops! Something went wrong! Try reloading the page or make another choice!', styleNotify);\n};","import styled from 'styled-components';\n\nexport const Loaders = styled.div`\n    text-align: center;\n    margin-top: 250px;\n`;","import { Vortex } from 'react-loader-spinner';\nimport { Loaders } from './Loader.styled';\n\nexport const Loader = () => (\n    <Loaders>\n        <Vortex\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"vortex-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"vortex-wrapper\"\n            colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n        />\n    </Loaders>\n);","import styled from 'styled-components';\n\nexport const ListReview = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`;\n\nexport const ItemReview = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    max-height: 300px;\n    overflow-y: auto;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieReviews, fetchError } from \"api/api\";\nimport { Loader } from \"../Loader/Loader\";\nimport { ListReview, ItemReview } from \"./Reviews.styled\";\n\nconst endPoint = '/movie';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(true);\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        };\n\n        fetchMovieReviews(endPoint, movieId)\n            .then(data => {\n                setReviews(data.results);\n            })\n            .catch(fetchError)\n            .finally(() => setLoading(false));\n    }, [movieId]);\n\n    return <>\n        <h3>Reviews:</h3>\n        {loading && <Loader />}\n        {reviews.length !== 0 ?\n            <ListReview>\n                {reviews.map(({ id, author, content }) =>\n                    <ItemReview key={id}>\n                        <p><b>Author:</b> {author}</p>\n                        <p>{content}</p>\n                    </ItemReview>)}\n            </ListReview> :\n            <p>Sorry! We don't have any reviews for this movie</p>}\n    </>\n};\n\nexport default Reviews;"],"names":["KEY","URL","styleNotify","position","timeout","width","fontSize","fetchMovies","endPoint","url","axios","response","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchError","Notify","Loaders","styled","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","ListReview","ItemReview","useParams","useState","loading","setLoading","reviews","setReviews","useEffect","then","results","catch","finally","length","map","id","author","content"],"sourceRoot":""}